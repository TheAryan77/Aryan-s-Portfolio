/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { act, useEffect, useRef ,useMemo} from 'react'
import { useGLTF, useFBX, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three/examples/jsm/Addons.js';
import { useGraph } from '@react-three/fiber';

const Avatar = ({ animationName = 'idle', ...props }) => {
  const group = useRef();

  const { scene } = useGLTF('/models/animations/myavatar.glb');
  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { animations: idleanimation } = useFBX('/models/animations/idle.fbx');
  const { animations: dancinganimation } = useFBX('/models/animations/Dancing.fbx');
  const { animations: hiphop1animation } = useFBX('/models/animations/Hip Hop1.fbx');
  const { animations: hiphop2animation } = useFBX('/models/animations/Hip Hop2.fbx');
  const { animations: jumpinganimation } = useFBX('/models/animations/Jump.fbx');
  const renameTracks = (animation) => {
    animation.tracks.forEach((track) => {
      track.name = track.name.replace('mixamorig', '');
    });
  };
  [idleanimation, dancinganimation, hiphop1animation, hiphop2animation, jumpinganimation].forEach((animation) =>
    renameTracks(animation[0])
  );
  idleanimation[0].name = 'idle';
  dancinganimation[0].name = 'dancing';
  hiphop1animation[0].name = 'hiphop1';
  hiphop2animation[0].name = 'hiphop2';
  jumpinganimation[0].name = 'jump';
  const { actions } = useAnimations(
    [idleanimation[0], dancinganimation[0], hiphop1animation[0], hiphop2animation[0], jumpinganimation[0]],
    group
  );

  useEffect(() => {
    if (actions && actions[animationName]) {
      console.log(clone);

      actions[animationName].reset().fadeIn(0.5).play();

      return () => actions[animationName]?.fadeOut(0.5);
    }
  }, [animationName, actions, clone]);

  return (
    <group ref={group} {...props} dispose={null}>
      <primitive object={nodes.Hips} />
      <skinnedMesh
        name="EyeLeft"
        geometry={nodes.EyeLeft.geometry}
        material={materials.Wolf3D_Eye}
        skeleton={nodes.EyeLeft.skeleton}
        morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
        morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
      />
      <skinnedMesh
        name="EyeRight"
        geometry={nodes.EyeRight.geometry}
        material={materials.Wolf3D_Eye}
        skeleton={nodes.EyeRight.skeleton}
        morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
        morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
      />
      <skinnedMesh
        name="Wolf3D_Head"
        geometry={nodes.Wolf3D_Head.geometry}
        material={materials.Wolf3D_Skin}
        skeleton={nodes.Wolf3D_Head.skeleton}
        morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
      />
      <skinnedMesh
        name="Wolf3D_Teeth"
        geometry={nodes.Wolf3D_Teeth.geometry}
        material={materials.Wolf3D_Teeth}
        skeleton={nodes.Wolf3D_Teeth.skeleton}
        morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Hair.geometry}
        material={materials.Wolf3D_Hair}
        skeleton={nodes.Wolf3D_Hair.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Glasses.geometry}
        material={materials.Wolf3D_Glasses}
        skeleton={nodes.Wolf3D_Glasses.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Outfit_Top.geometry}
        material={materials.Wolf3D_Outfit_Top}
        skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
        material={materials.Wolf3D_Outfit_Bottom}
        skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
        material={materials.Wolf3D_Outfit_Footwear}
        skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Body.geometry}
        material={materials.Wolf3D_Body}
        skeleton={nodes.Wolf3D_Body.skeleton}
      />
    </group>
  )
}

useGLTF.preload('/models/animations/myavatar.glb')

export default Avatar;